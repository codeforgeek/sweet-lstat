var errors=
{

	EACCES: { errno: 13, msg: 'Permission is denied for one of the directories in the path.' },
	
	EBADF:  { errno: 9, msg: 'File descriptor is bad. It occurs due to damage disk blocks or file system.' },

	EFAULT: { errno: 14, msg: 'Bad address.an invalid pointer was detected.' },

	ELOOP: { errno: 62, msg: ' Too many symbolic links encountered while traversing the path.' },

	ENAMETOOLONG: { errno: 63, msg: 'Provided File name is too long. For sda2 file system it is 255 characters and for sda3 it is 4096 characters' },

	ENOENT: { errno: 2, msg: 'A component of the path or prefix of path is not a directory.No such file or directory exists at this provided path.'},

	ENOMEM: { errno: 12, msg: 'Out of memory. (i.e Kernel memory). Cannot allocate memory' },

	ENOTDIR: { errno: 20, msg: ' A component of the path or prefix of path is not a directory.' },

	EOVERFLOW: { errno: 84, msg: 'Provided value is too large to be stored in given data type.' }

};


var getErrorFromNum = function(errno) {
  var keys = Object.keys(errors);
  var len = keys.length;
  for (var i=0; i<len; i++) {
    var key = keys[i];
    var e = errors[key];
    if (e.errno == errno) {
      return e.msg;
    }
  }
  return 'Unknown Error';
}


var getErrorFromCode = function(code) {
  var e = new Error();
  if (!errors[code]) {
    e.code = 'Not-LSTAT';
    e.msg = 'Unknown Error Code.';
    e.errno = -1;
    return e;
  }
  e.code = code;
  e.msg = e.message = errors[code].msg;
  e.errno = errors[code].errno;
  return e;
}


exports.getErrorFromNum=getErrorFromNum;
exports.getErrorFromCode=getErrorFromCode;
